
x-airflow-common: &airflow-common
  image: apache/airflow:2.8.1-python3.11
  environment: &airflow-common-env
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_db:5432/airflow
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=America/Sao_Paulo
    - AIRFLOW_UID=50000
    - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./extracted_data:/opt/airflow/extracted_data
    - ./scripts:/opt/airflow/scripts
    - ./logs:/opt/airflow/logs
    - ./requirements.txt:/requirements.txt
  networks:
    - banvic_network

services:
  source_db:
    image: postgres:16
    container_name: banvic_source_db
    environment:
      POSTGRES_DB: banvic
      POSTGRES_USER: data_engineer
      POSTGRES_PASSWORD: v3rysecur&pas5w0rd
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./sql/banvic.sql:/docker-entrypoint-initdb.d/banvic.sql
    ports:
      - 55432:5432
    networks:
      - banvic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U data_engineer -d banvic"]
      interval: 10s
      timeout: 5s
      retries: 5

  data_warehouse:
    image: postgres:16
    container_name: banvic_dw
    environment:
      POSTGRES_DB: banvic_dw
      POSTGRES_USER: dw_user
      POSTGRES_PASSWORD: dw_secure_pass
    volumes:
      - dw_data:/var/lib/postgresql/data
      - ./sql/init_dw.sql:/docker-entrypoint-initdb.d/init_dw.sql
    ports:
      - 55433:5432
    networks:
      - banvic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dw_user -d banvic_dw"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow_db:
    image: postgres:16
    container_name: airflow_db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - 55434:5432
    volumes:
      - ./airflow_db:/var/lib/postgresql/data
    networks:
      - banvic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Airflow Init (executa apenas uma vez)
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command: -c "pip install -r /requirements.txt && airflow db init && airflow users create --username admin --firstname Admin --lastname Admin --role Admin --email admin@banvic.com --password admin123"
    networks:
      - banvic_network
    depends_on:
      airflow_db:
        condition: service_healthy

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      source_db:
        condition: service_healthy
      data_warehouse:
        condition: service_healthy
    command: bash -c "pip install -r /requirements.txt && airflow scheduler"
    restart: unless-stopped
    networks:
      - banvic_network

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    depends_on:
      airflow-scheduler:
        condition: service_started
    command: bash -c "pip install -r /requirements.txt && airflow webserver"
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  banvic_network:
    driver: bridge

volumes:
  dbdata:
  dw_data:
  airflow_db: